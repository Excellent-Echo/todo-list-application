{"version":3,"sources":["Components/TodoList.js","App.js","index.js"],"names":["TodoList","useState","input","setInput","taskInput","setTaskInput","console","log","className","type","id","name","placeholder","onChange","e","target","value","handleInput","onClick","preventDefault","inputDetails","Math","floor","random","isCompleted","map","t","index","style","margin","element","findIndex","elem","newInput","completeTask","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQA+FeA,MA1Ff,WAAqB,IAAD,EAEUC,mBAAS,IAFnB,mBAETC,EAFS,KAEFC,EAFE,OAGkBF,mBAAS,IAH3B,mBAGTG,EAHS,KAGEC,EAHF,KA0ChB,OAFAC,QAAQC,IAAIH,GAKJ,sBAAKI,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,wBAEA,+BACA,sBAAKA,UAAU,cAAf,UACgB,uBAAOA,UAAU,mDACbC,KAAK,OACLC,GAAG,OACHC,KAAK,OACLC,YAAY,eACZC,SAAU,SAACC,GAAD,OAlDtB,SAACA,GACjBX,EAASW,EAAEC,OAAOC,OAiD2BC,CAAYH,MAEjC,wBAAQN,UAAU,yBAAyBU,QAhDvD,SAACJ,GAEb,GADAA,EAAEK,iBACY,KAAVjB,EAAc,CACd,IAAMkB,EAAe,CACjBV,GAAIW,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBP,MAAOd,EACPsB,aAAa,GAIjBnB,EAAa,GAAD,mBAAKD,GAAL,CAAgBgB,OAsCR,sBAOfhB,IAAc,GAEP,gCACKA,EAAUqB,KAAI,SAACC,EAAGC,GAAJ,OAEX,+BACI,6BAAKD,EAAEF,YAAc,mBAAGI,MAAO,CAAEC,OAAQ,SAApB,SAAgCH,EAAEV,QAAa,sBAAMY,MAAO,CAAEC,OAAQ,SAAvB,SAAmCH,EAAEV,UACzG,6BAAI,wBAAQR,UAAU,WAAWU,QAAS,SAACJ,GAAD,OA5CrD,SAACJ,GAElB,IAAMoB,EAAU1B,EAAU2B,WAAU,SAACC,GAAD,OAAUA,EAAKtB,KAAOA,KAEpDuB,EAAQ,YAAO7B,GAErB6B,EAASH,GAAT,2BACOG,EAASH,IADhB,IAEIN,aAAa,IAEjBnB,EAAa4B,GAkCgEC,CAAaR,EAAEhB,KAA5D,wBACJ,6BAAI,wBAAQF,UAAU,SAASU,QAAS,SAACJ,GAAD,OAjDnDJ,EAiDsEgB,EAAEhB,QAhDzFL,EAAaD,EAAU+B,QAAO,SAAAT,GAAC,OAAIA,EAAEhB,KAAOA,MAD5B,IAACA,GAiDe,wBAHCiB,QAYrB,S,MC1ELS,MARf,WACE,OACE,qBAAK5B,UAAU,kBAAf,SACE,cAAC,EAAD,OCAN6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.01a3cce7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Form} from 'react-bootstrap';\nimport \"./Todo.css\"\n\nfunction TodoList() {\n\n    const [input, setInput] = useState('');\n    const [taskInput, setTaskInput] = useState([]);\n\n    const handleInput = (e) => {\n        setInput(e.target.value);\n    };\n\n    const addTask = (e) => {\n        e.preventDefault();\n        if (input !== \"\") {\n            const inputDetails = {\n                id: Math.floor(Math.random() * 1000),\n                value: input,\n                isCompleted: false,\n\n            }\n\n            setTaskInput([...taskInput, inputDetails])\n        }\n    };\n\n    const deleteInput = (id) => {\n        setTaskInput(taskInput.filter(t => t.id !== id))\n    }\n\n    const completeTask = (id) => {\n\n        const element = taskInput.findIndex((elem) => elem.id === id);\n\n        const newInput = [...taskInput];\n\n        newInput[element] = {\n            ...newInput[element],\n            isCompleted: true,\n        };\n        setTaskInput(newInput)\n    };\n\n    console.log(taskInput);\n\n    return (\n       \n\n            <div className=\"container\">\n                <h1 className=\"title\">To-Do List</h1>\n\n                <form>\n                <div className=\"input-group\">\n                                <input className=\"input form-control form-control-lg input-keyword\"\n                                    type='text'\n                                    id='text'\n                                    name='text'\n                                    placeholder='Add new Task'\n                                    onChange={(e) => handleInput(e)} />\n                           \n                                <button className=\"btn btn-primary btn-lg\" onClick={addTask} >Add</button>\n                                </div>\n                </form>\n\n                   \n\n\n                {taskInput !== [] ? (\n\n                        <tbody>\n                            {taskInput.map((t, index) => (\n\n                                <tr key={index}>\n                                    <td>{t.isCompleted ? <s style={{ margin: \"0 1em\" }}>{t.value}</s> : <span style={{ margin: \"0 1em\" }}>{t.value}</span>}</td>\n                                    <td><button className='complete' onClick={(e) => completeTask(t.id)} >Complete</button></td>\n                                    <td><button className='delete' onClick={(e) => deleteInput(t.id)} >Delete</button></td>\n                                </tr>\n                            ))}\n                        </tbody>\n\n\n                    \n\n\n                ) : null}\n\n\n\n            </div>\n        \n    )\n}\n\nexport default TodoList","import React from 'react';\nimport TodoList from './Components/TodoList'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}